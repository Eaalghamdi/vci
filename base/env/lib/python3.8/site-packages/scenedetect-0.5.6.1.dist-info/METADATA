Metadata-Version: 2.1
Name: scenedetect
Version: 0.5.6.1
Summary: A cross-platform, OpenCV-based video scene detection program and Python library. 
Home-page: https://github.com/Breakthrough/PySceneDetect
Author: Brandon Castellano
Author-email: brandon248@gmail.com
License: BSD 3-Clause
Project-URL: Homepage, https://pyscenedetect.readthedocs.io/
Project-URL: Manual, https://pyscenedetect.readthedocs.io/projects/Manual/en/latest/
Project-URL: Changelog, https://pyscenedetect.readthedocs.io/en/latest/changelog/
Project-URL: Bug Tracker, https://github.com/Breakthrough/PySceneDetect/issues
Keywords: video computer-vision analysis
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Environment :: Console :: Curses
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: End Users/Desktop
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Multimedia :: Video
Classifier: Topic :: Multimedia :: Video :: Conversion
Classifier: Topic :: Multimedia :: Video :: Non-Linear Editor
Classifier: Topic :: Utilities
Requires-Dist: Click
Requires-Dist: numpy
Requires-Dist: tqdm
Provides-Extra: opencv-headless
Requires-Dist: opencv-python-headless (<=4.2.0.32) ; (python_version <= "3.5") and extra == 'opencv-headless'
Requires-Dist: opencv-python-headless ; (python_version > "3.5") and extra == 'opencv-headless'
Provides-Extra: opencv
Requires-Dist: opencv-python (<=4.2.0.32) ; (python_version <= "3.5") and extra == 'opencv'
Requires-Dist: opencv-python ; (python_version > "3.5") and extra == 'opencv'


PySceneDetect
==========================================================

Video Scene Cut Detection and Analysis Tool
----------------------------------------------------------

.. image:: https://img.shields.io/travis/com/Breakthrough/PySceneDetect
   :target: https://travis-ci.com/github/Breakthrough/PySceneDetect

.. image:: https://img.shields.io/github/release/Breakthrough/PySceneDetect.svg
   :target: https://github.com/Breakthrough/PySceneDetect

.. image:: https://img.shields.io/pypi/status/scenedetect.svg
   :target: https://github.com/Breakthrough/PySceneDetect

.. image:: https://img.shields.io/pypi/l/scenedetect.svg
   :target: http://pyscenedetect.readthedocs.org/en/latest/copyright/

.. image:: https://img.shields.io/github/stars/Breakthrough/PySceneDetect.svg?style=social&label=View%20on%20Github
   :target: https://github.com/Breakthrough/PySceneDetect

----------------------------------------------------------

Website: http://py.scenedetect.com/

Documentation: http://manual.scenedetect.com/

Github Repo: https://github.com/Breakthrough/PySceneDetect/

----------------------------------------------------------

PySceneDetect is a command-line tool and Python library which analyzes a video, looking for scene changes or cuts.  PySceneDetect integrates with external tools (e.g. `mkvmerge`, `ffmpeg`) to automatically split the video into individual clips when using the `split-video` command.  A frame-by-frame analysis can also be generated for a video, called a stats file, to help with determining optimal threshold values or detecting patterns/other analysis methods for a particular video.

There are two main detection methods PySceneDetect uses: `detect-threshold` (comparing each frame to a set black level, useful for detecting cuts and fades to/from black), and `detect-content` (compares each frame sequentially looking for changes in content, useful for detecting fast cuts between video scenes, although slower to process).  Each mode has slightly different parameters, and is described in detail in the documentation.

In general, use `detect-threshold` mode if you want to detect scene boundaries using fades/cuts in/out to black.  If the video uses a lot of fast cuts between content, and has no well-defined scene boundaries, you should use the `detect-content` mode.  Once you know what detection mode to use, you can try the parameters recommended below, or generate a statistics file (using the `-s` / `--stats` argument) in order to determine the correct paramters - specifically, the proper threshold value.

For help or other issues, feel free to submit any bugs or feature requests to Github: https://github.com/Breakthrough/PySceneDetect/issues

----------------------------------------------------------

Licensed under BSD 3-Clause (see the `LICENSE` file for details).

Copyright (C) 2014-2021 Brandon Castellano.
All rights reserved.



